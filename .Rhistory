fontface = 4,
label = p.lab)
pdf.options(reset = TRUE, onefile = FALSE)
pdf(file.path(fig.path,"km of pfs using best cutoff in 43 non-anaplatic wt out of updated 55 wt cohort regarding cd3 count.pdf"), width = 4, height = 5)
print(p)
dev.off()
print(p)
tmp2 <- wt3[-which(wt3$`Histology type (review/local)` %in% c("ANA diffuse (312)","Focal anaplasia (311)")),c("CD3_10HPF","CD8_10HPF","OS","OS.time","PFS","PFS.time")]
tmp2 <- tmp2[!is.na(tmp2$CD8_10HPF),]
tmp2$OS.time <- tmp2$OS.time/12
tmp2$PFS.time <- tmp2$PFS.time/12
colnames(tmp2)[2] <- c("ratio")
bestcutoff <- surv_cutpoint(data = tmp2, variables = "ratio",time = "OS.time",event = "OS",minprop = 0.2)
tmp2$group <- ifelse(tmp2$ratio > bestcutoff$cutpoint[1,1],"High","Low")
fitd <- survdiff(Surv(OS.time, OS) ~ group,
data      = tmp2,
na.action = na.exclude)
p.val <- 1 - pchisq(fitd$chisq, length(fitd$n) - 1)
fit <- survfit(Surv(OS.time, OS)~ group,
data      = tmp2,
type      = "kaplan-meier",
error     = "greenwood",
conf.type = "plain",
na.action = na.exclude)
names(fit$strata) <- gsub("group=", "", names(fit$strata))
p <- ggsurvplot(fit               = fit,
conf.int          = FALSE,
risk.table        = T,
risk.table.col    = "strata",
palette           = c(darkred,darkblue),
data              = tmp2,
size              = 1,
break.time.by     = 1,
legend.title      = "",
ylim              = c(0,1),
surv.median.line  = "hv",
xlab              = "Time (Months)",
ylab              = "Overall survival",
risk.table.y.text = FALSE)
p.lab <- paste0("P",
ifelse(p.val < 0.001, " < 0.001",
paste0(" = ",round(p.val, 3))))
p$plot <- p$plot + annotate("text",
x = 4, y = 0.1,
hjust = 0,
fontface = 4,
label = p.lab)
p
pdf.options(reset = TRUE, onefile = FALSE)
pdf(file.path(fig.path,"km of os using best cutoff in 43 non-anaplatic wt out of updated 55 wt cohort regarding cd8 count.pdf"), width = 4, height = 5)
print(p)
dev.off()
bestcutoff <- surv_cutpoint(data = tmp2, variables = "ratio",time = "PFS.time",event = "PFS",minprop = 0.2)
tmp2$group <- ifelse(tmp2$ratio > bestcutoff$cutpoint[1,1],"High","Low")
fitd <- survdiff(Surv(PFS.time, PFS) ~ group,
data      = tmp2,
na.action = na.exclude)
p.val <- 1 - pchisq(fitd$chisq, length(fitd$n) - 1)
fit <- survfit(Surv(PFS.time, PFS)~ group,
data      = tmp2,
type      = "kaplan-meier",
error     = "greenwood",
conf.type = "plain",
na.action = na.exclude)
names(fit$strata) <- gsub("group=", "", names(fit$strata))
p <- ggsurvplot(fit               = fit,
conf.int          = FALSE,
risk.table        = T,
risk.table.col    = "strata",
palette           = c(darkred,darkblue),
data              = tmp2,
size              = 1,
break.time.by     = 1,
legend.title      = "",
surv.median.line  = "hv",
ylim              = c(0,1),
xlab              = "Time (Years)",
ylab              = "Recurrence-free survival",
risk.table.y.text = FALSE)
p.lab <- paste0("P",
ifelse(p.val < 0.001, " < 0.001",
paste0(" = ",round(p.val, 3))))
p$plot <- p$plot + annotate("text",
x = 4, y = 0.1,
hjust = 0,
fontface = 4,
label = p.lab)
pdf.options(reset = TRUE, onefile = FALSE)
pdf(file.path(fig.path,"km of pfs using best cutoff in 43 non-anaplatic wt out of updated 55 wt cohort regarding cd8 count.pdf"), width = 4, height = 5)
print(p)
dev.off()
load("E:/IGBMC/myproject/Wilms/WILMS.RData")
colnames(ciber.gaby)
i = "CD45"
tmp1 <- ciber.gaby[rownames(annCol.wt.gaby.genomic.alter[which(annCol.wt.gaby.genomic.alter$RNA_Clust == "TP53_Mutated"),]),i]
tmp2 <- ciber.gaby[rownames(annCol.wt.gaby.genomic.alter[which(annCol.wt.gaby.genomic.alter$RNA_Clust == "TP53_Wild"),]),i]
wilcox.test(tmp1,tmp2)
tmp1 <- ciber.gaby[rownames(annCol.wt.gaby.genomic.alter[which(annCol.wt.gaby.genomic.alter$RNA_Clust == "TP53_Mutated"),]),"CD45"]
tmp2 <- ciber.gaby[rownames(annCol.wt.gaby.genomic.alter[which(annCol.wt.gaby.genomic.alter$RNA_Clust == "TP53_Wild"),]),"CD45"]
tmp <- data.frame(exp = c(tmp1,tmp2),
mut = rep(c("iWT","dWT"),c(length(tmp1),length(tmp2))))
tmp$mut <- factor(tmp$mut,levels = c("iWT","dWT"))
par(bty="o", mgp = c(1.5,.33,0), mar=c(4,3,1,0.1), las=1, tcl=-.25,las = 1)
boxplot(exp~mut,data = tmp,
xlab = "Immunity status",
ylab = "Immune cells (CD45+)",
outline = F,
col = ggplot2::alpha(jco[2:1],0.7))
tmp <- data.frame(exp = c(tmp2,tmp1),
mut = rep(c("iWT","dWT"),c(length(tmp2),length(tmp1))))
tmp$mut <- factor(tmp$mut,levels = c("iWT","dWT"))
par(bty="o", mgp = c(1.5,.33,0), mar=c(4,3,1,0.1), las=1, tcl=-.25,las = 1)
boxplot(exp~mut,data = tmp,
xlab = "Immunity status",
ylab = "Immune cells (CD45+)",
outline = F,
col = ggplot2::alpha(jco[2:1],0.7))
text(1.5,0.3,"P = 0.0159",cex = 1)
pdf(file.path(fig.path,"boxplot for CD45 immune proportion in gaby WT regarding tme subtypes.pdf"),width = 4,height = 3.5)
par(bty="o", mgp = c(1.5,.33,0), mar=c(4,3,1,0.1), las=1, tcl=-.25,las = 1)
boxplot(exp~mut,data = tmp,
xlab = "Immunity status",
ylab = "Immune cells (CD45+)",
outline = F,
col = ggplot2::alpha(jco[2:1],0.7))
stripchart(exp~mut, vertical = TRUE, data = tmp, cex = 1,
method = "jitter", add = TRUE, pch = 20, col = c(jco[2],jco[1]))
text(1.5,0.3,"P = 0.0159",cex = 1)
invisible(dev.off())
tmp <- data.frame(exp = c(tmp2,tmp1),
mut = rep(c("iWT","dWT"),c(length(tmp2),length(tmp1))))
tmp$mut <- factor(tmp$mut,levels = c("iWT","dWT"))
pdf(file.path(fig.path,"boxplot for CD45 immune proportion in gaby WT regarding tme subtypes.pdf"),width = 4,height = 3)
par(bty="o", mgp = c(1.5,.33,0), mar=c(4,3,1,0.1), las=1, tcl=-.25,las = 1)
boxplot(exp~mut,data = tmp,
xlab = "Immunity status",
ylab = "Immune cells (CD45+)",
outline = F,
col = ggplot2::alpha(jco[2:1],0.7))
stripchart(exp~mut, vertical = TRUE, data = tmp, cex = 1,
method = "jitter", add = TRUE, pch = 20, col = c(jco[2],jco[1]))
text(1.5,0.3,"P = 0.0159",cex = 1)
invisible(dev.off())
install.packages("Rediscover")
library(Rediscover)
data("A_example")
PMA <- getPM(A_example)
View(A_example)
dim(A_example)
mymutex <- getMutex(A=A_example,PM=PMA)
mymutex
dim(mymutex)
dim(PMA)
data("TCGA_COAD")
data("PM_COAD")
COAD_mutex <- getMutex(TCGA_COAD[1:100,], PM_COAD[1:100,])
View(TCGA_COAD)
COAD_mutex
COAD_mutex@uplo
View(COAD_mutex)
COAD_mutex@factors
COAD_mutex
load("E:/IGBMC/externalproject/ExternalProject/Gaby/TRCC_multi_omics/ELMER/ChAMP/champ.RData")
dim(Sinfo)
dim(annCol)
View(annCol.subset)
rownames(annCol.subset) == rownames(annCol.subset2)
#plotdata <- meth[,rownames(annCol.subset)]
plotdata <- standarize.fun(wateRmelon::Beta2M(meth[,rownames(annCol.subset)]),halfwidth = 2)
plotdata <- meth[,rownames(annCol.subset)]
hm2 <- pheatmap(plotdata,
border_color = NA,
show_rownames = FALSE,
show_colnames = FALSE,
annotation_col = annCol.subset2[colnames(plotdata),c("MethClust","RCC")],
annotation_colors = annColors[c("MethClust","RCC")],
#use_raster = FALSE,
cluster_rows = hcg,
cluster_cols = hcs,
name = "Beta",
cellwidth = 200/ncol(plotdata),
cellheight = 300/nrow(plotdata),
treeheight_row = 20,
treeheight_col = 20,
#fontsize_col = 5,
#cellwidth = 6,
color = NMF:::ccRamp(heatmap.BlWtRd2))
library(ComplexHeatmap)
hm2 <- pheatmap(plotdata,
border_color = NA,
show_rownames = FALSE,
show_colnames = FALSE,
annotation_col = annCol.subset2[colnames(plotdata),c("MethClust","RCC")],
annotation_colors = annColors[c("MethClust","RCC")],
#use_raster = FALSE,
cluster_rows = hcg,
cluster_cols = hcs,
name = "Beta",
cellwidth = 200/ncol(plotdata),
cellheight = 300/nrow(plotdata),
treeheight_row = 20,
treeheight_col = 20,
#fontsize_col = 5,
#cellwidth = 6,
color = NMF:::ccRamp(heatmap.BlWtRd2))
#draw(hm1 %v% hm2, heatmap_legend_side = "bottom", annotation_legend_side = "bottom")
draw(hm2, annotation_legend_side = "left", heatmap_legend_side = "right")
annCol.subset2["TRCC-36T",]
annCol.subset2["TRCC-36T","RCC"] <- "tRCC"
annCol.subset2["TRCC-3T","RCC"]
annCol.subset2["TRCC-3T","RCC"] <- "tRCC"
#plotdata <- meth[,rownames(annCol.subset)]
plotdata <- standarize.fun(wateRmelon::Beta2M(meth[,rownames(annCol.subset)]),halfwidth = 2)
plotdata <- meth[,rownames(annCol.subset)]
hm2 <- pheatmap(plotdata,
border_color = NA,
show_rownames = FALSE,
show_colnames = FALSE,
annotation_col = annCol.subset2[colnames(plotdata),c("MethClust","RCC")],
annotation_colors = annColors[c("MethClust","RCC")],
#use_raster = FALSE,
cluster_rows = hcg,
cluster_cols = hcs,
name = "Beta",
cellwidth = 200/ncol(plotdata),
cellheight = 300/nrow(plotdata),
treeheight_row = 20,
treeheight_col = 20,
#fontsize_col = 5,
#cellwidth = 6,
color = NMF:::ccRamp(heatmap.BlWtRd2))
#draw(hm1 %v% hm2, heatmap_legend_side = "bottom", annotation_legend_side = "bottom")
draw(hm2, annotation_legend_side = "left", heatmap_legend_side = "right")
annCol.subset2["TRCC-36T","RCC"]
#plotdata <- meth[,rownames(annCol.subset)]
plotdata <- standarize.fun(wateRmelon::Beta2M(meth[,rownames(annCol.subset)]),halfwidth = 2)
plotdata <- meth[,rownames(annCol.subset)]
hm2 <- pheatmap(plotdata,
border_color = NA,
show_rownames = FALSE,
show_colnames = FALSE,
annotation_col = annCol.subset2[colnames(plotdata),c("MethClust","RCC")],
annotation_colors = annColors[c("MethClust","RCC")],
#use_raster = FALSE,
cluster_rows = hcg,
cluster_cols = hcs,
name = "Beta",
cellwidth = 200/ncol(plotdata),
cellheight = 300/nrow(plotdata),
treeheight_row = 20,
treeheight_col = 20,
#fontsize_col = 5,
#cellwidth = 6,
color = NMF:::ccRamp(heatmap.BlWtRd2))
#draw(hm1 %v% hm2, heatmap_legend_side = "bottom", annotation_legend_side = "bottom")
draw(hm2, annotation_legend_side = "left", heatmap_legend_side = "right")
pdf(file.path(fig.path,"heatmap2 of differential methylated probes in TRCCe vs Others in three atac clusters to gaby ccrcc and prcc cohort without ITH.pdf"), width = 20, height = 12)
#draw(hm1 %v% hm2, heatmap_legend_side = "bottom", annotation_legend_side = "bottom")
draw(hm2, annotation_legend_side = "left", heatmap_legend_side = "right")
invisible(dev.off())
load("E:/IGBMC/externalproject/ExternalProject/Gaby/Justine/PEComa/PEComa.RData")
mutBinary.expr
mutBinary.expr["TFE3_MITF","JNGR98"]
tmp <- intersect(colnames(mutBinary.expr),rownames(annCol.expr[annCol.expr$NMF4 == "CS1",]))
table(nmf4.movics$clust.res$clust)
rownames(annCol.expr[annCol.expr$NMF4 == "CS1",])
tmp <- intersect(colnames(mutBinary.expr),rownames(annCol.expr[annCol.expr$NMF4 == "CS1",]))
nmf2.movics$clust.res <- nmf2.movics$clust.res[intersect(rownames(nmf2.movics$clust.res), colnames(mutBinary.expr))]
mutBinary.expr["TYRO3",]
tmp <- intersect(colnames(mutBinary.expr),rownames(annCol.expr[annCol.expr$NMF4 == "CS1",]))
tmp
mutBinary.expr["TYRO3",tmp]
nmf2.movics$clust.res <- nmf2.movics$clust.res[intersect(rownames(nmf2.movics$clust.res), colnames(mutBinary.expr)),]
nmf2.movics <- list("clust.res" = annCol.expr,
"mo.method" = "pecoma48.nmf2")
nmf2.movics$clust.res$samID <- rownames(nmf2.movics$clust.res)
nmf2.movics$clust.res$clust <- sapply(nmf2.movics$clust.res$NMF2,
switch,
"CS1" = 1,
"CS2" = 2)
nmf2.movics$clust.res <- nmf2.movics$clust.res[intersect(rownames(nmf2.movics$clust.res), colnames(mutBinary.expr)),]
nmf4.movics <- list("clust.res" = annCol.expr,
"mo.method" = "pecoma48.nmf4")
nmf4.movics$clust.res$samID <- rownames(nmf4.movics$clust.res)
nmf4.movics$clust.res$clust <- sapply(nmf4.movics$clust.res$NMF4,
switch,
"CS1" = 1,
"CS2" = 2,
"CS3" = 3,
"CS4" = 4)
nmf4.movics$clust.res <- nmf4.movics$clust.res[intersect(rownames(nmf4.movics$clust.res), colnames(mutBinary.expr)),]
mut.nmf4 <- compMut(moic.res     = nmf4.movics,
mut.matrix   = mutBinary.expr, # binary somatic mutation matrix
clust.col    = annColors.expr$NMF4,
doWord       = TRUE, # generate table in .docx format
doPlot       = TRUE, # draw OncoPrint
freq.cutoff  = 0.01, # keep those genes that mutated in at least 10% of samples
p.cutoff     = 0.05, # keep those genes with nominal p value < 0.05 to draw OncoPrint
p.adj.cutoff = 2, # keep those genes with adjusted p value < 0.05 to draw OncoPrint
innerclust   = F, # perform clustering within each subtype
width        = 8,
height       = 3.5,
fig.name     = "oncoprint2 between nmf4 and mutation in pecoma48",
tab.name     = "independent2 test between nmf4 and mutation in pecoma48",
res.path     = res.path,
fig.path     = fig.path)
library(MOVICS)
mut.nmf4 <- compMut(moic.res     = nmf4.movics,
mut.matrix   = mutBinary.expr, # binary somatic mutation matrix
clust.col    = annColors.expr$NMF4,
doWord       = TRUE, # generate table in .docx format
doPlot       = TRUE, # draw OncoPrint
freq.cutoff  = 0.01, # keep those genes that mutated in at least 10% of samples
p.cutoff     = 0.05, # keep those genes with nominal p value < 0.05 to draw OncoPrint
p.adj.cutoff = 2, # keep those genes with adjusted p value < 0.05 to draw OncoPrint
innerclust   = F, # perform clustering within each subtype
width        = 8,
height       = 3.5,
fig.name     = "oncoprint2 between nmf4 and mutation in pecoma48",
tab.name     = "independent2 test between nmf4 and mutation in pecoma48",
res.path     = res.path,
fig.path     = fig.path)
mut.nmf4 <- compMut(moic.res     = nmf4.movics,
mut.matrix   = mutBinary.expr, # binary somatic mutation matrix
clust.col    = rev(annColors.expr$NMF4),
doWord       = TRUE, # generate table in .docx format
doPlot       = TRUE, # draw OncoPrint
freq.cutoff  = 0.01, # keep those genes that mutated in at least 10% of samples
p.cutoff     = 0.05, # keep those genes with nominal p value < 0.05 to draw OncoPrint
p.adj.cutoff = 2, # keep those genes with adjusted p value < 0.05 to draw OncoPrint
innerclust   = F, # perform clustering within each subtype
width        = 8,
height       = 3.5,
fig.name     = "oncoprint2 between nmf4 and mutation in pecoma48",
tab.name     = "independent2 test between nmf4 and mutation in pecoma48",
res.path     = res.path,
fig.path     = fig.path)
nmf2.movics <- list("clust.res" = annCol.expr,
"mo.method" = "pecoma48.nmf2")
nmf2.movics$clust.res$samID <- rownames(nmf2.movics$clust.res)
nmf2.movics$clust.res$clust <- sapply(nmf2.movics$clust.res$NMF2,
switch,
"CS1" = 1,
"CS2" = 2)
nmf2.movics$clust.res <- nmf2.movics$clust.res[intersect(rownames(nmf2.movics$clust.res), colnames(mutBinary.expr)),]
nmf4.movics <- list("clust.res" = annCol.expr,
"mo.method" = "pecoma48.nmf4")
nmf4.movics$clust.res$samID <- rownames(nmf4.movics$clust.res)
nmf4.movics$clust.res$clust <- sapply(nmf4.movics$clust.res$NMF4,
switch,
"CS1" = 1,
"CS2" = 2,
"CS3" = 3,
"CS4" = 4)
nmf4.movics$clust.res <- nmf4.movics$clust.res[intersect(rownames(nmf4.movics$clust.res), colnames(mutBinary.expr)),]
mut.nmf4 <- compMut(moic.res     = nmf4.movics,
mut.matrix   = mutBinary.expr, # binary somatic mutation matrix
clust.col    = rev(annColors.expr$NMF4),
doWord       = TRUE, # generate table in .docx format
doPlot       = TRUE, # draw OncoPrint
freq.cutoff  = 0.01, # keep those genes that mutated in at least 10% of samples
p.cutoff     = 0.05, # keep those genes with nominal p value < 0.05 to draw OncoPrint
p.adj.cutoff = 2, # keep those genes with adjusted p value < 0.05 to draw OncoPrint
innerclust   = F, # perform clustering within each subtype
width        = 8,
height       = 3.5,
fig.name     = "oncoprint2 between nmf4 and mutation in pecoma48",
tab.name     = "independent2 test between nmf4 and mutation in pecoma48",
res.path     = res.path,
fig.path     = fig.path)
mut.nmf2 <- compMut(moic.res     = nmf2.movics,
mut.matrix   = mutBinary.expr, # binary somatic mutation matrix
clust.col    = rev(annColors.expr$NMF2),
doWord       = TRUE, # generate table in .docx format
doPlot       = TRUE, # draw OncoPrint
freq.cutoff  = 0.01, # keep those genes that mutated in at least 10% of samples
p.cutoff     = 0.1, # keep those genes with nominal p value < 0.05 to draw OncoPrint
p.adj.cutoff = 2, # keep those genes with adjusted p value < 0.05 to draw OncoPrint
innerclust   = F, # perform clustering within each subtype
width        = 8,
height       = 3.5,
fig.name     = "oncoprint2 between nmf2 and mutation in pecoma48",
tab.name     = "independent2 test between nmf2 and mutation in pecoma48",
res.path     = res.path,
fig.path     = fig.path)
mutBinary.expr["CDK8",]
mutBinary["CDK8",]
is.element('JNGR171'，colnames(tpm))
is.element('JNGR171',colnames(tpm))
is.element('JNGR172',colnames(tpm))
dim(annCol.exor)
dim(annCol.expr)
annCol.expr["JNGR114","TFE3_MITF"] <- "WT"  # JNGR114 has no RNA-seq detected TFE3 fusion and has no WES data
annCol.expr["JNGR134","TFE3_MITF"] <- "WT"  # JNGR114 has no RNA-seq detected TFE3 fusion and has no WES data
#----------------------------#
# use NMF to cluster samples #
indata <- tpm.combat.pecoma[Mids, rownames(annCol.expr)]
indata <- na.omit(indata)
indata <- indata[apply(indata, 1, function(x) {sum(x > 0) > 0.1*ncol(indata)}),]
var.sel <- apply(indata, 1, sd)
var.sel <- names(var.sel[var.sel > quantile(var.sel, prob = seq(0,1,0.1))[10]])
indata <- indata[var.sel,]
hcg <- hclust(distanceMatrix(as.matrix(t(indata)), "euclidean"), "ward.D")
library(ClassDiscovery)
library(ComplexHeatmap)
#----------------------------#
# use NMF to cluster samples #
indata <- tpm.combat.pecoma[Mids, rownames(annCol.expr)]
indata <- na.omit(indata)
indata <- indata[apply(indata, 1, function(x) {sum(x > 0) > 0.1*ncol(indata)}),]
var.sel <- apply(indata, 1, sd)
var.sel <- names(var.sel[var.sel > quantile(var.sel, prob = seq(0,1,0.1))[10]])
indata <- indata[var.sel,]
hcg <- hclust(distanceMatrix(as.matrix(t(indata)), "euclidean"), "ward.D")
plotdata <- standarize.fun(indata, halfwidth = 2)
hm1 <- pheatmap(mat = as.matrix(plotdata)[,sampleorder.nmf],
border_color = NA,
color = NMF:::ccRamp(heatmap.BlWtRd2,64),
show_rownames = F,
show_colnames = T,
cluster_rows = hcg,
cluster_cols = F,
annotation_col = annCol.expr[sampleorder.nmf,c("NMF2","NMF4","mRNA4","mRNA2","OS","PFS","Histology","Name Project RNA","CINSARC","Stage","TP","Chrom_orgn","mTOR","TP53","TFE3_MITF","MITF fusion","MITF partner","TFE3 fusion","TFE3 IHC","TFE3 partner","Age.binary","Sex","Necrosis","Location","Responder","TIDE")],
annotation_colors = annColors.expr[c("NMF2","mRNA2","mRNA4","NMF4","OS","PFS","Histology","Name Project RNA","CINSARC","Stage","TP","MITF fusion","MITF partner","TFE3 fusion","TFE3 IHC","TFE3 partner","Age.binary","Sex","Necrosis","Location","Responder","TIDE","Chrom_orgn","mTOR","TP53","TFE3_MITF")],
name = "mRNA",
cellwidth = 12,
cellheight = 200/nrow(plotdata))
hm1
plotdata <- standarize.fun(mcp.pecoma[,sampleorder.nmf],halfwidth = 2)
hm2 <- pheatmap(mat = as.matrix(plotdata),
border_color = NA,
color = NMF:::ccRamp(heatmap.BlBkRd,64),
show_rownames = T,
show_colnames = T,
cluster_rows = F,
cluster_cols = F,
name = "MCPcounter",
cellwidth = 12,
cellheight = 12)
plotdata <- standarize.fun(t(tme.dat[sampleorder.nmf,]), halfwidth = 2)
hm3 <- pheatmap(plotdata,
border_color = NA,
color = NMF:::ccRamp(heatmap.BlWtRd2),
show_rownames = T,
show_colnames = F,
cluster_rows = F,
cluster_cols = F,
name = "Immunoregulator",
cellheight = 12,
cellwidth = 400/ncol(plotdata))
## ici heatmap
plotdata <- standarize.fun(tpm.combat.pecoma[ici.gene,sampleorder.nmf], halfwidth = 2)
hm4 <- pheatmap(plotdata,
border_color = NA,
color = NMF:::ccRamp(heatmap.BlWtRd2),
show_rownames = T,
show_colnames = T,
cluster_rows = F,
cluster_cols = F,
name = "ICI",
cellheight = 12,
cellwidth = 400/ncol(plotdata))
pdf(file = file.path(fig.path,"nmf clustering of pecoma48 using all mrna with high variability by mad.pdf"), width = 12,height = 18)
draw(hm1 %v% hm2 %v% hm3 %v% hm4, heatmap_legend_side = "bottom", annotation_legend_side = "bottom")
invisible(dev.off())
# save image
save.image(file = file.path(workdir,"PEComa.RData"))
is.element("JNGR100", colnames(tpm))
is.element("JNGR189", colnames(tpm))
load("E:/IGBMC/externalproject/ExternalProject/Gaby/Justine/PEComa/PEComa.RData")
colnames(tpm)
is.element("JNGR149",colnames(tpm))
dim(maf.pecoma)
length(unique(maf.pecoma$Samplename))
unique(maf.pecoma$Samplename)
sort(unique(maf.pecoma$Samplename))
length(sort(unique(maf.pecoma$Samplename)))
setdiff(unique(maf.pecoma$Samplename), unique(maf.pecoma.filtered$Samplename))
dim(orgmeth.pecoma)
colnames(orgmeth.pecoma)
colnames(orgmeth.scars)
orgmeth <- readRDS(file = file.path(data.path,"myCombat.rds"))
colnames(orgmeth)
dimcolnames(orgmeth))
dim(orgmeth)
methinfo
colnames(orgmeth)
colnames(orgmeth.pecoma)
dim(orgmeth.pecoma)
is.element("JNGR145",colnames(orgmeth))
colnames(orgmeth)
rownames(sinfo)
dim(sinfo)
# load sample information
sinfo.mut <- read.delim(file = file.path(data.path,"sinfo.pecoma.novo.txt"),sep = "\t",row.names = 1,check.names = F,stringsAsFactors = F,header = T)
View(sinfo.mut)
sinfo.mut <- sinfo.mut[which(sinfo.mut$`ID NOVOPM` != ""),]
dim(tpm)
dim(tpm.combat.pecoma)
tmp <- readRDS("E:/IGBMC/externalproject/ExternalProject/Gaby/methRCC/InputData/myCombat.rds")
tmp <- readRDS("E:/IGBMC/externalproject/ExternalProject/Gaby/methRCC/InputData/myNorm1225.rds")
library(devtools)
library(roxygen2)
library(usethis)
workdir <- "E:/IGBMC/externalproject/ExternalProject/Gaby/ccrcc_clinical_trial/EPISILENCE/Rpackage"; setwd(workdir)
devtools::document(pkg="E:/IGBMC/externalproject/ExternalProject/Gaby/ccrcc_clinical_trial/EPISILENCE/Rpackage/iMES")
use_mit_license(copyright_holder = "Xiaofan Lu")
devtools::load_all()
workdir <- "E:/IGBMC/externalproject/ExternalProject/Gaby/ccrcc_clinical_trial/EPISILENCE/Rpackage/iMES"; setwd(workdir)
use_mit_license(copyright_holder = "Xiaofan Lu")
devtools::load_all()
system('R CMD Rd2pdf E:/IGBMC/externalproject/ExternalProject/Gaby/ccrcc_clinical_trial/EPISILENCE/Rpackage/iMES')
