# edge.curved = c(-0.2, 0.2, 0.2, 0.2,
#                 0, 0, 0, 0,
#                 0, 0, 0, 0, 0, 0),
edge.curved = c(-0.5, 0.3, 0.3, 0.3,
0, 0, 0, 0,
-0.3, 0.3, 0.3, -0.3, -0.3, -0.3),
edge.arrow.mode = c(2,2,2,2,
2,2,2,2,
0,0,0,0,0,0),
vertex.label.dist = 4)
plot(g,
#arrow.mode = 1, arrow.type = "simple",
vertex.color = brewer.pal(5, "Set1"),
vertex.label.color = brewer.pal(5, "Set1"),
edge.lty = plot.data$lty,
#edge.color = plot.data$col,
#edge.width = 3 + 15 * plot.data$lwd,
edge.color = "black",
edge.width = 1,
layout = layout_in_circle,
curved = T,
# edge.curved = c(-0.2, 0.2, 0.2, 0.2,
#                 0, 0, 0, 0,
#                 0, 0, 0, 0, 0, 0),
edge.curved = c(-0.3, 0.3, 0.3, 0.3,
0, 0, 0, 0,
-0.3, 0.3, 0.3, -0.3, -0.3, -0.3),
edge.arrow.mode = c(2,2,2,2,
2,2,2,2,
0,0,0,0,0,0),
vertex.label.dist = 4)
g
plot(g,
#arrow.mode = 1, arrow.type = "simple",
vertex.color = brewer.pal(5, "Set1"),
vertex.label.color = brewer.pal(5, "Set1"),
edge.lty = plot.data$lty,
#edge.color = plot.data$col,
#edge.width = 3 + 15 * plot.data$lwd,
edge.color = "black",
edge.width = 1,
layout = layout_in_circle,
curved = T,
# edge.curved = c(-0.2, 0.2, 0.2, 0.2,
#                 0, 0, 0, 0,
#                 0, 0, 0, 0, 0, 0),
edge.curved = c(0, 0.3, 0.3, 0.3,
0, 0, 0, 0,
-0.3, 0.3, 0.3, -0.3, -0.3, -0.3),
edge.arrow.mode = c(2,2,2,2,
2,2,2,2,
0,0,0,0,0,0),
vertex.label.dist = 4)
g
plot(g,
#arrow.mode = 1, arrow.type = "simple",
vertex.color = brewer.pal(5, "Set1"),
vertex.label.color = brewer.pal(5, "Set1"),
edge.lty = plot.data$lty,
#edge.color = plot.data$col,
#edge.width = 3 + 15 * plot.data$lwd,
edge.color = "black",
edge.width = 1,
layout = layout_in_circle,
curved = T,
# edge.curved = c(-0.2, 0.2, 0.2, 0.2,
#                 0, 0, 0, 0,
#                 0, 0, 0, 0, 0, 0),
edge.curved = c(-0.3, 0.3, 0.3, 0.3,
0, 0, 0, 0,
-0.3, 0.3, 0.3, -0.3, -0.3, -0.3),
edge.arrow.mode = c(2,2,2,2,
2,2,2,2,
0,0,0,0,0,0),
vertex.label.dist = 4)
plot(g,
#arrow.mode = 1, arrow.type = "simple",
vertex.color = brewer.pal(5, "Set1"),
vertex.label.color = brewer.pal(5, "Set1"),
edge.lty = plot.data$lty,
#edge.color = plot.data$col,
#edge.width = 3 + 15 * plot.data$lwd,
edge.color = "black",
edge.width = 1,
layout = layout_in_circle,
curved = T,
# edge.curved = c(-0.2, 0.2, 0.2, 0.2,
#                 0, 0, 0, 0,
#                 0, 0, 0, 0, 0, 0),
edge.curved = c(-0.3, 0.3, 0.3, 0.3,
0, 0, 0, 0,
0.3, 0.3, 0.3, -0.3, -0.3, -0.3),
edge.arrow.mode = c(2,2,2,2,
2,2,2,2,
0,0,0,0,0,0),
vertex.label.dist = 4)
plot(g,
#arrow.mode = 1, arrow.type = "simple",
vertex.color = brewer.pal(5, "Set1"),
vertex.label.color = brewer.pal(5, "Set1"),
edge.lty = plot.data$lty,
#edge.color = plot.data$col,
#edge.width = 3 + 15 * plot.data$lwd,
edge.color = "black",
edge.width = 1,
layout = layout_in_circle,
curved = T,
# edge.curved = c(-0.2, 0.2, 0.2, 0.2,
#                 0, 0, 0, 0,
#                 0, 0, 0, 0, 0, 0),
edge.curved = c(-0.3, 0.3, 0.3, 0.3,
0, 0, 0, 0,
0.3, 0.3, 0.3, 0.3, -0.3, -0.3),
edge.arrow.mode = c(2,2,2,2,
2,2,2,2,
0,0,0,0,0,0),
vertex.label.dist = 4)
plot(g,
#arrow.mode = 1, arrow.type = "simple",
vertex.color = brewer.pal(5, "Set1"),
vertex.label.color = brewer.pal(5, "Set1"),
edge.lty = plot.data$lty,
#edge.color = plot.data$col,
#edge.width = 3 + 15 * plot.data$lwd,
edge.color = "black",
edge.width = 1,
layout = layout_in_circle,
curved = T,
# edge.curved = c(-0.2, 0.2, 0.2, 0.2,
#                 0, 0, 0, 0,
#                 0, 0, 0, 0, 0, 0),
edge.curved = c(-0.3, 0.3, 0.3, 0.5,
0, 0, 0, 0,
0.3, 0.3, 0.3, 0.3, -0.3, -0.3),
edge.arrow.mode = c(2,2,2,2,
2,2,2,2,
0,0,0,0,0,0),
vertex.label.dist = 4)
plot(g,
#arrow.mode = 1, arrow.type = "simple",
vertex.color = brewer.pal(5, "Set1"),
vertex.label.color = brewer.pal(5, "Set1"),
edge.lty = plot.data$lty,
#edge.color = plot.data$col,
#edge.width = 3 + 15 * plot.data$lwd,
edge.color = "black",
edge.width = 1,
layout = layout_in_circle,
curved = T,
# edge.curved = c(-0.2, 0.2, 0.2, 0.2,
#                 0, 0, 0, 0,
#                 0, 0, 0, 0, 0, 0),
edge.curved = c(-0.3, 0.3, 0.3, 0.3,
0, 0, 0, 0,
0.3, 0.3, 0.3, 0.3, -0.3, -0.3),
edge.arrow.mode = c(2,2,2,2,
2,2,2,2,
0,0,0,0,0,0),
vertex.label.dist = 4)
g <- graph( c(0,1,1,0,1,2,1,3,1,3,1,3,
2,3,2,3,2,3,2,3,0,1)+1 )
curve_multiple(g)
plot(g)
g=graph_from_data_frame(plot.data[, 1:2])
g <- graph( c(0,1,1,0,1,2,1,3,1,3,1,3,
2,3,2,3,2,3,2,3,0,1)+1 )
curve_multiple(g)
g=graph_from_data_frame(plot.data[, 1:2])
curve_multiple(g)
plot(g,
#arrow.mode = 1, arrow.type = "simple",
vertex.color = brewer.pal(5, "Set1"),
vertex.label.color = brewer.pal(5, "Set1"),
edge.lty = plot.data$lty,
#edge.color = plot.data$col,
#edge.width = 3 + 15 * plot.data$lwd,
edge.color = "black",
edge.width = 1,
layout = layout_in_circle,
curved = T,
# edge.curved = c(-0.2, 0.2, 0.2, 0.2,
#                 0, 0, 0, 0,
#                 0, 0, 0, 0, 0, 0),
edge.curved = c(-0.3, 0.3, 0.3, 0.3,
0, 0, 0, 0,
0.3, 0.3, 0.3, 0.3, -0.3, -0.3),
edge.arrow.mode = c(2,2,2,2,
2,2,2,2,
0,0,0,0,0,0),
vertex.label.dist = 4)
g <- graph_from_edgelist(data.frame(from = c(1, 2), to = c(2, 3)))
g <- graph_from_edgelist(data.frame(from = c(1, 2), to = c(2, 3)))
g <- graph_from_edgelist(data.frame(from = c(1, 2), to = c(2, 3)), directed = FALSE)
plot(g,
#arrow.mode = 1, arrow.type = "simple",
vertex.color = brewer.pal(5, "Set1"),
vertex.label.color = brewer.pal(5, "Set1"),
edge.lty = plot.data$lty,
#edge.color = plot.data$col,
#edge.width = 3 + 15 * plot.data$lwd,
edge.color = "black",
edge.width = 1,
vertex.size = c(2,1,2),
layout = layout_in_circle,
curved = T,
# edge.curved = c(-0.2, 0.2, 0.2, 0.2,
#                 0, 0, 0, 0,
#                 0, 0, 0, 0, 0, 0),
edge.curved = c(-0.3, 0.3, 0.3, 0.3,
0, 0, 0, 0,
0.3, 0.3, 0.3, 0.3, -0.3, -0.3),
edge.arrow.mode = c(2,2,2,2,
2,2,2,2,
0,0,0,0,0,0),
vertex.label.dist = 4)
g
plot(g,
#arrow.mode = 1, arrow.type = "simple",
vertex.color = brewer.pal(5, "Set1"),
vertex.label.color = brewer.pal(5, "Set1"),
edge.lty = plot.data$lty,
#edge.color = plot.data$col,
#edge.width = 3 + 15 * plot.data$lwd,
edge.color = "black",
edge.width = 1,
vertex.size = c(10,20,30),
layout = layout_in_circle,
curved = T,
# edge.curved = c(-0.2, 0.2, 0.2, 0.2,
#                 0, 0, 0, 0,
#                 0, 0, 0, 0, 0, 0),
edge.curved = c(-0.3, 0.3, 0.3, 0.3,
0, 0, 0, 0,
0.3, 0.3, 0.3, 0.3, -0.3, -0.3),
edge.arrow.mode = c(2,2,2,2,
2,2,2,2,
0,0,0,0,0,0),
vertex.label.dist = 4)
g
plot(g,
#arrow.mode = 1, arrow.type = "simple",
vertex.color = brewer.pal(5, "Set1"),
vertex.label.color = brewer.pal(5, "Set1"),
edge.lty = plot.data$lty,
#edge.color = plot.data$col,
#edge.width = 3 + 15 * plot.data$lwd,
edge.color = "black",
edge.width = 1,
vertex.size = c(10,20,30,40,50),
layout = layout_in_circle,
curved = T,
# edge.curved = c(-0.2, 0.2, 0.2, 0.2,
#                 0, 0, 0, 0,
#                 0, 0, 0, 0, 0, 0),
edge.curved = c(-0.3, 0.3, 0.3, 0.3,
0, 0, 0, 0,
0.3, 0.3, 0.3, 0.3, -0.3, -0.3),
edge.arrow.mode = c(2,2,2,2,
2,2,2,2,
0,0,0,0,0,0),
vertex.label.dist = 4)
plot.data
plot(g,
#arrow.mode = 1, arrow.type = "simple",
vertex.color = brewer.pal(5, "Set1"),
vertex.label.color = brewer.pal(5, "Set1"),
edge.lty = plot.data$lty,
#edge.color = plot.data$col,
#edge.width = 3 + 15 * plot.data$lwd,
edge.color = "black",
edge.width = 1,
vertex.shape = c("pie"),
vertex.size = c(0.1495017,0.3687708,0.10299,0.2956811)*100
,
layout = layout_in_circle,
curved = T,
# edge.curved = c(-0.2, 0.2, 0.2, 0.2,
#                 0, 0, 0, 0,
#                 0, 0, 0, 0, 0, 0),
edge.curved = c(-0.3, 0.3, 0.3, 0.3,
0, 0, 0, 0,
0.3, 0.3, 0.3, 0.3, -0.3, -0.3),
edge.arrow.mode = c(2,2,2,2,
2,2,2,2,
0,0,0,0,0,0),
vertex.label.dist = 4)
plot(g,
#arrow.mode = 1, arrow.type = "simple",
vertex.color = brewer.pal(5, "Set1"),
vertex.label.color = brewer.pal(5, "Set1"),
edge.lty = plot.data$lty,
#edge.color = plot.data$col,
#edge.width = 3 + 15 * plot.data$lwd,
edge.color = "black",
edge.width = 1,
vertex.shape = "pie",
#vertex.size = c(0.1495017,0.3687708,0.10299,0.2956811)*100,
layout = layout_in_circle,
curved = T,
# edge.curved = c(-0.2, 0.2, 0.2, 0.2,
#                 0, 0, 0, 0,
#                 0, 0, 0, 0, 0, 0),
edge.curved = c(-0.3, 0.3, 0.3, 0.3,
0, 0, 0, 0,
0.3, 0.3, 0.3, 0.3, -0.3, -0.3),
edge.arrow.mode = c(2,2,2,2,
2,2,2,2,
0,0,0,0,0,0),
vertex.label.dist = 4)
g <- make_ring(10)
values <- lapply(1:10, function(x) sample(1:10,3))
if (interactive()) {
plot(g, vertex.shape="pie", vertex.pie=values,
vertex.pie.color=list(heat.colors(5)),
vertex.size=seq(10,30,length.out=10), vertex.label=NA)
}
g
values
list(heat.colors(5)
)
library(igraph)
g <- make_ring(5) # 5 vertices, 5 edges
V(g)$color <- "red" # assign a color to the vertices in the circle
layout <- layout.circle(g) # arrange vertices in a circle
g <- add_vertices(g, 1) # add one vertex
V(g)[6]$color <- "green" # set the color of the new vertex to green
g <- add_edges(g, c(1, 6)) # add an edge between vertex 1 and the new vertex
layout <- layout.circle(g, order = c(2:5, 6, 1)) # order the vertices to place vertex 6 outside of the circle
plot(g, layout = layout, vertex.label = NA) # vertex.label = NA to hide vertex labels
g
V(g)
load("E:/IGBMC/externalproject/ExternalProject/Gaby/ccrcc_clinical_trial/EPISILENCE/EPISILENCE.RData")
load("E:/IGBMC/externalproject/ExternalProject/Gaby/ccrcc_clinical_trial/EPISILENCE/EPISILENCE.RData")
workdir <- "E:/IGBMC/externalproject/ExternalProject/Gaby/ccrcc_clinical_trial/EPISILENCE"; setwd(workdir)
fig.path <- file.path(workdir,"Figures")
res.path <- file.path(workdir,"Results")
data.path <- file.path(workdir,"InputData")
comAnn.path <- file.path(workdir,"Annotation") ## path containning annotation files created by Jack
comRFun.path <- file.path(workdir,"commonFun") ## universal functions
shareFun.path <- file.path(workdir,"SharedScripts") ## functions shared by this type of analysis only
script.path <- file.path(workdir,"Scripts")
champ.path <- file.path(workdir,"ChAMP")
if (!file.exists(res.path)) { dir.create(res.path) }
if (!file.exists(fig.path)) { dir.create(fig.path) }
if (!file.exists(data.path)) { dir.create(data.path) }
if (!file.exists(comAnn.path)) { dir.create(comAnn.path) }
if (!file.exists(champ.path)) { dir.create(champ.path) }
source(file.path(shareFun.path,"LoadCommonFunLib.R"))
# load R packages
# library(RefFreeEWAS)
# library(TOAST)
library(viridis)
library(data.table)
library(ComplexHeatmap)
library(ClassDiscovery)
library(gplots)
library(RColorBrewer)
library(survival)
library(survminer)
library(ComparisonSurv)
library(survRM2)
library(ChAMP)
library(ChAMPdata)
library(estimate)
library(GSVA)
library(MCPcounter)
library(tidyverse)
library(magrittr)
library(readxl)
library(stringr)
library(forcats)
library(MOVICS)
library(ConsensusClusterPlus)
library(jstable)
library(dendsort)
library(dplyr)
library(missMethyl)
library(DMRcate)
library(DMRcatedata)
library(doParallel)
library(forestplot)
library(matlab)
library(dendextend)
library(limma)
library(SimDesign)
library(randomForestSRC)
library(wateRmelon)
library(pROC)
library(iClusterPlus)
library(ComparisonSurv)
library(GenomicFeatures)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(glmnet)
library(survcomp)
library(survRM2)
library(survivalROC)
library(lsr)
library(clusterProfiler)
library(klaR)
library(circlize)
library(DESeq2)
library(reshape2)
library(matlab)
library(impute)
library(pRRophetic)
library(mMCPcounter)
library(GseaVis)
source(file.path(script.path,"champ.DMR.modified.R"))
source(file.path(script.path,"champ.DMP.modified.R"))
source(file.path(shareFun.path,"CalExpDownPct.unMatch.R"))
source(file.path(shareFun.path,"CalExpDownPct.noNormal.unMatch.R"))
kirc.movics.mut <- list("clust.res" = annCol.kirc[intersect(kirc.tum.sam,colnames(mut.binary)),],
"mo.method" = "kirc")
kirc.movics.mut$clust.res$samID <- rownames(kirc.movics.mut$clust.res)
kirc.movics.mut$clust.res$clust <- sapply(kirc.movics.mut$clust.res$EpiS,
switch,
"C1"   = 1,
"C2"    = 2)
mut.kirc <- compMut(moic.res     = kirc.movics.mut,
mut.matrix   = mut.binary, # binary somatic mutation matrix
doWord       = TRUE, # generate table in .docx format
doPlot       = TRUE, # draw OncoPrint
freq.cutoff  = 0.03, # keep those genes that mutated in at least 3% of samples
p.cutoff     = 0.05, # keep those genes with nominal p value < 0.25 to draw OncoPrint
p.adj.cutoff = 2, # keep those genes with adjusted p value < 1 to draw OncoPrint
innerclust   = TRUE, # perform clustering within each subtype
#annCol       = annCol450[intersect(colnames(mut.binary),rownames(annCol450)),names(annColors450)], # same annotation for heatmap
#annColors    = annColors450, # same annotation color for heatmap
width        = 8,
height       = 5,
fig.name     = "oncoprint for unsupervised episilence subtype of kirc",
tab.name     = "independent test among unsupervised episilence subtype of kirc",
res.path     = res.path,
fig.path     = fig.path)
mut.kirc <- compMut(moic.res     = kirc.movics.mut,
mut.matrix   = mut.binary, # binary somatic mutation matrix
doWord       = TRUE, # generate table in .docx format
doPlot       = TRUE, # draw OncoPrint
freq.cutoff  = 0.03, # keep those genes that mutated in at least 3% of samples
p.cutoff     = 0.05, # keep those genes with nominal p value < 0.25 to draw OncoPrint
p.adj.cutoff = 2, # keep those genes with adjusted p value < 1 to draw OncoPrint
innerclust   = TRUE, # perform clustering within each subtype
#annCol       = annCol450[intersect(colnames(mut.binary),rownames(annCol450)),names(annColors450)], # same annotation for heatmap
#annColors    = annColors450, # same annotation color for heatmap
width        = 8,
height       = 5,
fig.name     = "oncoprint for unsupervised episilence subtype of kirc",
tab.name     = "independent test among unsupervised episilence subtype of kirc",
res.path     = res.path,
fig.path     = fig.path)
ccle.anno
dim(ccle.anno)
# unsupervised clustering using these 13 genes identified two clusters in BIONIKK armAB
indata <- Gmeth.promcgi[epi.silenced.gene,c(armA.sam.bionikk,armB.sam.bionikk)]
#indata <- Beta2M(indata)
# indata[indata > 0.3] <- 1
# indata[indata <= 0.3] <- 0
hcs <- hclust(distanceMatrix(as.matrix(indata), "euclidean"), "ward.D"); hcs.bionikk <- hcs
indata <- Gmeth.promcgi[epi.silenced.gene1,c(armA.sam.bionikk,armB.sam.bionikk)]
hcg <- hclust(distanceMatrix(as.matrix(t(indata)), "euclidean"), "ward.D")
group <- cutree(hcs, k = 2); names(group) <- colnames(indata)
plotdata <- indata
hm1 <- pheatmap(plotdata,
border_color = NA,
show_rownames = TRUE,
show_colnames = FALSE,
#use_raster = FALSE,
cluster_rows = hcg,
cluster_cols = hcs,
name = "Beta",
cellheight = 12,
cellwidth = 300/ncol(plotdata),
color = rich.colors(64, palette="temperature", alpha=1.0, rgb=FALSE, plot=FALSE),
annotation_col = annCol.bionikk[colnames(indata),c("EpiS","TED2","arm","Beuselinck","sarcomatoid","ageAB","sex","imdc","response","os","tst","pfs")],
annotation_colors = annColors.bionikk[c("EpiS","TED","TED2","arm","Beuselinck","ageAB","sex","sarcomatoid","imdc","response","os","tst","pfs")])
hm1
table(annCol.bionikk$EpiS,annCol.bionikk$TED)
fisher.test(table(annCol.bionikk$EpiS,annCol.bionikk$TED)) # p=1
table(annCol.bionikk$EpiS,annCol.bionikk$TED2)
fisher.test(matrix(c(20,4,33,8),byrow = T,nrow = 2)) # p=1
tmp <- annCol.bionikk[names(group),]
fitd <- survdiff(Surv(pfs.time, pfs) ~ group, data=tmp, na.action=na.exclude)
p.val <- 1-pchisq(fitd$chisq, length(fitd$n)-1)
fitd <- survdiff(Surv(os.time, os) ~ group, data=tmp, na.action=na.exclude)
p.val <- 1-pchisq(fitd$chisq, length(fitd$n)-1)
fit <- survfit(Surv(os.time, os)~ group, data=tmp, type="kaplan-meier", error="greenwood", conf.type="plain", na.action=na.exclude)
names(fit$strata) <- gsub("group=", "", names(fit$strata))
fit
dim(annCol.ccle.rna)
annCol.ccle.rna
annCol.ccle
colnames(orgmeth.ccle)
ccle.head <- read.table(file.path(data.path,"GSE68379_Matrix.processed.txt"),sep = "\t",check.names = F,stringsAsFactors = F,header = T, nrows = 10)
ccle.head <- read.table(file.path("F:/IGBMC/externalproject/ExternalProject/Gaby/ccrcc_clinical_trial/epic/InputData/GSE68379_Matrix.processed.txt"),sep = "\t",check.names = F,stringsAsFactors = F,header = T, nrows = 10)
ccle.head <- read.table(file.path("E:/IGBMC/externalproject/ExternalProject/Gaby/ccrcc_clinical_trial/epic/InputData/GSE68379_Matrix.processed.txt"),sep = "\t",check.names = F,stringsAsFactors = F,header = T, nrows = 10)
colnames(ccle.head)
grep("RCC-4",colnames(ccle.head))
grep("RCC",colnames(ccle.head))
colnames(ccle.head)[grep("RCC",colnames(ccle.head))]
library(devtools)
library(roxygen2)
library(usethis)
workdir <- "E:/IGBMC/externalproject/ExternalProject/Gaby/ccrcc_clinical_trial/EPISILENCE/Rpackage"; setwd(workdir)
usethis::create_package("iMES")
devtools::document(pkg="E:/IGBMC/externalproject/ExternalProject/Gaby/ccrcc_clinical_trial/EPISILENCE/Rpackage/iMES")
workdir <- "E:/IGBMC/externalproject/ExternalProject/Gaby/ccrcc_clinical_trial/EPISILENCE/Rpackage/iMES"; setwd(workdir)
usethis::use_testthat()
devtools::test()
usethis::use_vignette("iMES-vignette")
usethis::use_readme_md()
usethis::use_news_md()
use_mit_license(copyright_holder = "Xiaofan Lu")
